Ths RoboNatives Builder is an EXTREMELY Simple (and therefore flimsy) Natives Generator
that produces Win32 and Win64 .dll's and Linux32 .so's. 

The 'generator.properties' file defines the parameters it will use:

src.dir  -> Source Code Directory
bin.dir  -> Build Directory
jni.dir  -> Working Directory for JNI Files that the builder creates
includes -> Files to scan and generate from. Defined as a "glob". 
excludes -> Files to ignore. Defined as a "glob".

This allows the program to generate C/C++ Source Code from Java Files and the comments
inside of them while automatically handling several things like Buffer <-> Array.

If you don't wish to mess with the current settings then all you are forced to change is
the 'includes' setting if new JNI Files must be created if, for example, a class that
didn't have Native Methods before, now has Native Methods. 

Quick Start Steps:
1. Modify 'includes' As Appropriate
2. Place robonatives-builder.jar and generator.properties in the root directory of your project.
3. Run 'java -jar robonatives-builder.jar' in the commandline.
4. If all goes well then there should be your Platform-dependent builds ready in the 'libs' folder.

After Generation:
	Any Natives used in the library must atleast come with win32, win64 and linux32 versions and
	must be placed in the 'natives' package where Native.java is found. From there the library
	should be loaded, as appropriate, via Native.loadLibrary(libname).
	
Credits:
	BadLogic Games - JNIGen [Create Java/C++ Interop from Comments!]
		This program uses JNIGen extensively and would not function in any way, shape or form without it.